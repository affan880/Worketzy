{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from '@react-navigation/native';\nimport JobTypes from \"./Job_Types\";\nimport React from 'react';\nimport Colors from \"../../utils/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar JobSeekerType = function JobSeekerType() {\n  var navigation = useNavigation();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isPress = _React$useState2[0],\n      setIsPress = _React$useState2[1];\n\n  var onTouchJob = {\n    style: isPress ? styles.SelectorOptionOnClick : styles.SelectorOption,\n    onPress: function onPress() {\n      return isPress ? null : setIsPress(true);\n    }\n  };\n  var onTouchRec = {\n    style: isPress ? styles.SelectorOption : styles.SelectorOptionOnClick,\n    onPress: function onPress() {\n      return isPress ? setIsPress(false) : null;\n    }\n  };\n  var JobTypeICons = {\n    FindJob: require(\"../../../assets/FindJob.png\"),\n    FindEmployee: require(\"../../../assets/FindEmployee.png\")\n  };\n  return _jsxs(View, {\n    style: styles.Container,\n    children: [_jsxs(View, {\n      style: styles.Types,\n      children: [_jsx(TouchableOpacity, _objectSpread(_objectSpread({}, onTouchJob), {}, {\n        children: _jsx(JobTypes, {\n          TextColor: isPress ? Colors.mediumGrey : Colors.mediumGrey,\n          JobType: \"Find Job\",\n          JobTypeDesc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n          image: JobTypeICons.FindJob\n        })\n      })), _jsx(TouchableOpacity, _objectSpread(_objectSpread({}, onTouchRec), {}, {\n        children: _jsx(JobTypes, {\n          TextColor: isPress ? Colors.mediumGrey : Colors.mediumGrey,\n          JobType: \"Find Employee\",\n          JobTypeDesc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n          image: JobTypeICons.FindEmployee\n        })\n      }))]\n    }), _jsx(View, {\n      style: styles.BtnContainer,\n      children: _jsx(TouchableOpacity, {\n        style: styles.ConfirmBtn,\n        onPress: function onPress() {\n          isPress ? navigation.navigate(\"Find Job\") : navigation.navigate(\"Find Empolyee\");\n        },\n        children: _jsx(Text, {\n          style: styles.BtnTextStyle,\n          children: \"Confirm\"\n        })\n      })\n    })]\n  });\n};\n\nexport default JobSeekerType;\nvar styles = StyleSheet.create({\n  Container: {\n    height: \"70%\",\n    width: \"100%\"\n  },\n  Types: {\n    flexDirection: \"row\",\n    height: \"55%\",\n    paddingHorizontal: \"5%\",\n    marginTop: '15%',\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  SelectorOption: {\n    margin: \"1.5%\",\n    width: \"50%\",\n    height: \"90%\",\n    color: Colors.black,\n    backgroundColor: Colors.white,\n    borderWidth: 2,\n    borderColor: Colors.mediumGrey,\n    borderRadius: 18\n  },\n  SelectorOptionOnClick: {\n    width: \"50%\",\n    height: \"90%\",\n    backgroundColor: Colors.secondary,\n    borderWidth: 2,\n    borderColor: Colors.secondary,\n    borderRadius: 18,\n    margin: \"1.5%\"\n  },\n  BtnContainer: {\n    width: \"100%\",\n    height: \"15%\",\n    top: \"20%\",\n    alignItems: \"center\"\n  },\n  ConfirmBtn: {\n    width: \"92.5%\",\n    margin: \"1.5%\",\n    height: 50,\n    elevation: 8,\n    backgroundColor: Colors.secondary,\n    borderRadius: 24,\n    justifyContent: 'center'\n  },\n  BtnTextStyle: {\n    fontStyle: \"normal\",\n    fontWeight: \"700\",\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: \"center\",\n    letterSpacing: 1,\n    textTransform: \"uppercase\",\n    color: \"#FFFFFF\"\n  }\n});","map":{"version":3,"names":["useNavigation","JobTypes","React","Colors","JobSeekerType","navigation","useState","isPress","setIsPress","onTouchJob","style","styles","SelectorOptionOnClick","SelectorOption","onPress","onTouchRec","JobTypeICons","FindJob","require","FindEmployee","Container","Types","mediumGrey","BtnContainer","ConfirmBtn","navigate","BtnTextStyle","StyleSheet","create","height","width","flexDirection","paddingHorizontal","marginTop","alignItems","justifyContent","margin","color","black","backgroundColor","white","borderWidth","borderColor","borderRadius","secondary","top","elevation","fontStyle","fontWeight","fontSize","lineHeight","textAlign","letterSpacing","textTransform"],"sources":["C:/Users/syeda/desktop/Github/Projects/Worketzy/Src/Components/JobType/Job_Type_Selector.jsx"],"sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity, Button } from 'react-native'\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport JobTypes from './Job_Types';\r\nimport React from 'react';\r\nimport Colors from '../../utils/Colors';\r\nconst JobSeekerType = () => {\r\n  const navigation = useNavigation();\r\n  var [isPress, setIsPress] = React.useState(true);\r\n  const onTouchJob = {\r\n    style: isPress ? styles.SelectorOptionOnClick : styles.SelectorOption,\r\n    onPress: () => isPress ? null : setIsPress(true),\r\n    \r\n  }\r\n  const onTouchRec = {\r\n    style: isPress ? styles.SelectorOption : styles.SelectorOptionOnClick ,\r\n    onPress: () => isPress ? setIsPress(false) : null,\r\n  };\r\n   const JobTypeICons = {\r\n     FindJob: require(\"../../../assets/FindJob.png\"),\r\n     FindEmployee: require(\"../../../assets/FindEmployee.png\"),\r\n   };\r\n  return (\r\n    <View style={styles.Container}>\r\n      <View style={styles.Types}>\r\n        <TouchableOpacity {...onTouchJob}>\r\n          <JobTypes\r\n            TextColor={isPress ? Colors.mediumGrey : Colors.mediumGrey}\r\n            JobType=\"Find Job\"\r\n            JobTypeDesc=\"Lorem ipsum dolor sit amet consectetur adipisicing elit.\"\r\n            image={JobTypeICons.FindJob}\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity {...onTouchRec}>\r\n          <JobTypes\r\n            TextColor={isPress ? Colors.mediumGrey : Colors.mediumGrey}\r\n            JobType=\"Find Employee\"\r\n            JobTypeDesc=\"Lorem ipsum dolor sit amet consectetur adipisicing elit.\"\r\n            image={JobTypeICons.FindEmployee}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.BtnContainer}>\r\n        <TouchableOpacity\r\n          style={styles.ConfirmBtn}\r\n          onPress={() => {\r\n            isPress\r\n              ? navigation.navigate(\"Find Job\")\r\n              : navigation.navigate(\"Find Empolyee\");\r\n          }}\r\n        >\r\n          <Text style={styles.BtnTextStyle}>Confirm</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default JobSeekerType\r\n\r\nconst styles = StyleSheet.create({\r\n  Container: {\r\n    height: \"70%\",\r\n    width: \"100%\",\r\n  },\r\n  Types: {\r\n    flexDirection: \"row\",\r\n    height: \"55%\",\r\n    paddingHorizontal:\"5%\",\r\n    marginTop:'15%',\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  SelectorOption: {\r\n    margin: \"1.5%\",\r\n    width: \"50%\",\r\n    height: \"90%\",\r\n    color: Colors.black ,\r\n    backgroundColor: Colors.white,\r\n    borderWidth: 2,\r\n    borderColor: Colors.mediumGrey,\r\n    borderRadius: 18,\r\n  },\r\n  SelectorOptionOnClick: {\r\n    width: \"50%\",\r\n    height: \"90%\",\r\n    backgroundColor: Colors.secondary,\r\n    borderWidth: 2,\r\n    borderColor: Colors.secondary,\r\n    borderRadius: 18,\r\n    margin: \"1.5%\",\r\n  },\r\n  BtnContainer: {\r\n    width: \"100%\",\r\n    height: \"15%\",\r\n    top:\"20%\",\r\n    alignItems: \"center\",\r\n  },\r\n  ConfirmBtn: {\r\n    width: \"92.5%\",\r\n    margin: \"1.5%\",\r\n    height: 50,\r\n    elevation: 8,\r\n    backgroundColor: Colors.secondary,\r\n    borderRadius: 24,\r\n    justifyContent:'center'\r\n  },\r\n  BtnTextStyle: {\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"700\",\r\n    fontSize: 14,\r\n    lineHeight: 18,\r\n    textAlign: \"center\",\r\n    letterSpacing: 1,\r\n    textTransform: \"uppercase\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n});\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}