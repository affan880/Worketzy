{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as firebase from \"firebase\";\nimport * as firestore from \"firebase/firestore\";\nimport \"firebase/auth\";\nimport firebaseConfig from \"./firebaseConfig\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport var auth = firebase.auth();\nexport var logout = function logout() {\n  return auth.signOut();\n};\nexport var firebaseLogin = function firebaseLogin(_ref) {\n  var verificationId, verificationCode, credential;\n  return _regeneratorRuntime.async(function firebaseLogin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          verificationId = _ref.verificationId, verificationCode = _ref.verificationCode;\n          credential = firebase.auth.PhoneAuthProvider.credential(verificationId, verificationCode);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(firebase.auth().signInWithCredential(credential));\n\n        case 4:\n          return _context.abrupt(\"return\", true);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getVerificationId = function getVerificationId(_ref2) {\n  var phoneNumber, recaptchaVerifierCurrent, phoneProvider, verificationId;\n  return _regeneratorRuntime.async(function getVerificationId$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          phoneNumber = _ref2.phoneNumber, recaptchaVerifierCurrent = _ref2.recaptchaVerifierCurrent;\n          phoneProvider = new firebase.auth.PhoneAuthProvider();\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(phoneProvider.verifyPhoneNumber(phoneNumber, recaptchaVerifierCurrent));\n\n        case 4:\n          verificationId = _context2.sent;\n          return _context2.abrupt(\"return\", verificationId);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var Firestore = firebase.firestore();\nexport var createUserDocument = function createUserDocument(ValidFirstName, ValidLastName) {\n  var user, uid;\n  return _regeneratorRuntime.async(function createUserDocument$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          user = firebase.auth().currentUser;\n          uid = user.uid;\n          console.log(uid);\n          Firestore.collection(\"users\").doc(\"slyHO52BZIMqXJshiITfJz43Qs33\").set({\n            firsttName: ValidFirstName,\n            lastName: ValidLastName,\n            createdAt: new Date()\n          });\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/syeda/Desktop/Github/Projects/Worketzy/Src/Components/firebase/firebase.jsx"],"names":["firebase","firestore","firebaseConfig","apps","length","initializeApp","auth","logout","signOut","firebaseLogin","verificationId","verificationCode","credential","PhoneAuthProvider","signInWithCredential","getVerificationId","phoneNumber","recaptchaVerifierCurrent","phoneProvider","verifyPhoneNumber","Firestore","createUserDocument","ValidFirstName","ValidLastName","user","currentUser","uid","console","log","collection","doc","set","firsttName","lastName","createdAt","Date"],"mappings":";AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AACA,OAAO,KAAKC,SAAZ,MAA2B,oBAA3B;AACA,OAAO,eAAP;AACA,OAAOC,cAAP;;AAIA,IAAI,CAACF,QAAQ,CAACG,IAAT,CAAcC,MAAnB,EAA2B;AACzBJ,EAAAA,QAAQ,CAACK,aAAT,CAAuBH,cAAvB;AACD;;AAED,OAAO,IAAMI,IAAI,GAAGN,QAAQ,CAACM,IAAT,EAAb;AAEP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SAAMD,IAAI,CAACE,OAAL,EAAN;AAAA,CAAf;AAEP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,cAAT,QAASA,cAAT,EAAyBC,gBAAzB,QAAyBA,gBAAzB;AACrBC,UAAAA,UADqB,GACRZ,QAAQ,CAACM,IAAT,CAAcO,iBAAd,CAAgCD,UAAhC,CACjBF,cADiB,EAEjBC,gBAFiB,CADQ;AAAA;AAAA,2CAKrBX,QAAQ,CAACM,IAAT,GAAgBQ,oBAAhB,CAAqCF,UAArC,CALqB;;AAAA;AAAA,2CAQpB,IARoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAWP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BC,UAAAA,WAD+B,SAC/BA,WAD+B,EAE/BC,wBAF+B,SAE/BA,wBAF+B;AAIzBC,UAAAA,aAJyB,GAIT,IAAIlB,QAAQ,CAACM,IAAT,CAAcO,iBAAlB,EAJS;AAAA;AAAA,2CAKFK,aAAa,CAACC,iBAAd,CAC3BH,WAD2B,EAE3BC,wBAF2B,CALE;;AAAA;AAKzBP,UAAAA,cALyB;AAAA,4CAUxBA,cAVwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAaP,OAAO,IAAMU,SAAS,GAAGpB,QAAQ,CAACC,SAAT,EAAlB;AAEP,OAAO,IAAMoB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAOC,cAAP,EAAuBC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,UAAAA,IAD0B,GACnBxB,QAAQ,CAACM,IAAT,GAAgBmB,WADG;AAE1BC,UAAAA,GAF0B,GAEpBF,IAAI,CAACE,GAFe;AAGhCC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,UAAAA,SAAS,CAACS,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkC,8BAAlC,EAAkEC,GAAlE,CAAsE;AACpEC,YAAAA,UAAU,EAAEV,cADwD;AAEpEW,YAAAA,QAAQ,EAAEV,aAF0D;AAGpEW,YAAAA,SAAS,EAAE,IAAIC,IAAJ;AAHyD,WAAtE;;AAJgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B","sourcesContent":["import * as firebase from \"firebase\";\r\nimport * as firestore from \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from \"./firebaseConfig\";\r\n\r\n\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const auth = firebase.auth();\r\n\r\nexport const logout = () => auth.signOut();\r\n\r\nexport const firebaseLogin = async ({ verificationId, verificationCode }) => {\r\n  const credential = firebase.auth.PhoneAuthProvider.credential(\r\n    verificationId,\r\n    verificationCode\r\n  );\r\n  await firebase.auth().signInWithCredential(credential);\r\n\r\n\r\n  return true;\r\n};\r\n\r\nexport const getVerificationId = async ({\r\n  phoneNumber,\r\n  recaptchaVerifierCurrent,\r\n}) => {\r\n  const phoneProvider = new firebase.auth.PhoneAuthProvider();\r\n  const verificationId = await phoneProvider.verifyPhoneNumber(\r\n    phoneNumber,\r\n    recaptchaVerifierCurrent\r\n  );\r\n\r\n  return verificationId;\r\n};\r\n\r\nexport const Firestore = firebase.firestore();\r\n\r\nexport const createUserDocument = async (ValidFirstName, ValidLastName) => {\r\n  const user = firebase.auth().currentUser;\r\n  const uid = user.uid;\r\n  console.log(uid)\r\n  Firestore.collection(\"users\").doc(\"slyHO52BZIMqXJshiITfJz43Qs33\").set({\r\n    firsttName: ValidFirstName,\r\n    lastName: ValidLastName,\r\n    createdAt: new Date(),\r\n  });\r\n\r\n  // if (!snapshot.exists) {\r\n  //   try {\r\n  //     userRef.set({\r\n  //       firsttName,\r\n  //       lastName,\r\n  //       createdAt: new Date(),\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.log(\"error in creating user\", error);\r\n  //   }\r\n  // }\r\n};"]},"metadata":{},"sourceType":"module"}