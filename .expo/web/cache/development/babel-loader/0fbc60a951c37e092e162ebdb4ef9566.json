{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nimport SelectDropdown from \"react-native-select-dropdown\";\nimport Colors from \"../../utils/Colors\";\nimport { Entypo } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AppSelectdropdown = function AppSelectdropdown(_ref) {\n  var Data = _ref.Data,\n      setJobTypeOption = _ref.setJobTypeOption,\n      Name = _ref.Name,\n      width = _ref.width;\n  return _jsx(View, {\n    style: [styles.container, {\n      width: width\n    }],\n    children: _jsxs(View, {\n      style: {\n        flexDirection: \"column\",\n        width: \"100%\"\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 16,\n          marginBottom: 15\n        },\n        children: Name\n      }), _jsx(SelectDropdown, {\n        buttonStyle: {\n          backgroundColor: Colors.secondary,\n          borderRadius: 10,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          alignContent: \"center\",\n          width: \"100%\"\n        },\n        buttonTextStyle: {\n          color: Colors.primary\n        },\n        defaultButtonText: \"Select Job Type\",\n        renderDropdownIcon: function renderDropdownIcon() {\n          return _jsx(Entypo, {\n            name: \"chevron-down\",\n            size: 24,\n            color: Colors.primary\n          });\n        },\n        dropdownOverlayColor: Colors.lightGrey,\n        dropdownStyle: {\n          width: \"80%\",\n          height: \"35%\",\n          bottom: 10,\n          borderWidth: 1,\n          borderColor: Colors.mediumGrey,\n          borderRadius: 10,\n          padding: 10,\n          alignContent: \"center\",\n          justifyContent: \"center\",\n          alignSelf: \"center\"\n        },\n        data: Data,\n        onSelect: function onSelect(selectedItem, index) {\n          setJobTypeOption(selectedItem);\n        },\n        buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n          return selectedItem;\n        },\n        rowTextForSelection: function rowTextForSelection(item, index) {\n          return item;\n        }\n      })]\n    })\n  });\n};\n\nexport default AppSelectdropdown;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.white,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    padding: 15,\n    marginVertical: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: Colors.secondary\n  }\n});","map":{"version":3,"names":["React","SelectDropdown","Colors","Entypo","AppSelectdropdown","Data","setJobTypeOption","Name","width","styles","container","flexDirection","fontSize","marginBottom","backgroundColor","secondary","borderRadius","justifyContent","alignItems","alignContent","color","primary","lightGrey","height","bottom","borderWidth","borderColor","mediumGrey","padding","alignSelf","selectedItem","index","item","StyleSheet","create","white","marginVertical","display"],"sources":["C:/Users/syeda/desktop/Github/Projects/Worketzy/Src/Components/CustomComponents/appSelectdropdown.jsx"],"sourcesContent":["import { StyleSheet, Text, View } from 'react-native'\r\nimport React from 'react'\r\nimport SelectDropdown from \"react-native-select-dropdown\";\r\nimport Colors from '../../utils/Colors';\r\nimport { Entypo } from '@expo/vector-icons';\r\nconst AppSelectdropdown = ({Data, setJobTypeOption, Name, width}) => {\r\n  return (\r\n    <View style={[styles.container, {width}]}>\r\n      <View style={{ flexDirection: \"column\", width: \"100%\" }}>\r\n        <Text\r\n          style={{\r\n            fontSize: 16,\r\n            marginBottom: 15,\r\n          }}\r\n        >\r\n          {Name}\r\n        </Text>\r\n        <SelectDropdown\r\n          buttonStyle={{\r\n            backgroundColor: Colors.secondary,\r\n            borderRadius: 10,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            alignContent: \"center\",\r\n            width: \"100%\",\r\n          }}\r\n          buttonTextStyle={{ color: Colors.primary }}\r\n          defaultButtonText={\"Select Job Type\"}\r\n          renderDropdownIcon={() => (\r\n            <Entypo name=\"chevron-down\" size={24} color={Colors.primary} />\r\n          )}\r\n          dropdownOverlayColor={Colors.lightGrey}\r\n          dropdownStyle={{\r\n            width: \"80%\",\r\n            height: \"35%\",\r\n            bottom: 10,\r\n            borderWidth: 1,\r\n            borderColor: Colors.mediumGrey,\r\n            borderRadius: 10,\r\n            padding: 10,\r\n            alignContent: \"center\",\r\n            justifyContent: \"center\",\r\n            alignSelf: \"center\",\r\n          }}\r\n          data={Data}\r\n          onSelect={(selectedItem, index) => {\r\n            setJobTypeOption(selectedItem);\r\n          }}\r\n          buttonTextAfterSelection={(selectedItem, index) => {\r\n            // text represented after item is selected\r\n            // if data array is an array of objects then return selectedItem.property to render after item is selected\r\n            return selectedItem;\r\n          }}\r\n          rowTextForSelection={(item, index) => {\r\n            // text represented for each item in dropdown\r\n            // if data array is an array of objects then return item.property to represent item in dropdown\r\n            return item;\r\n          }}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n      }\r\n      \r\n      export default AppSelectdropdown\r\n      \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: Colors.white,\r\n    borderRadius: 10,\r\n    flexDirection: \"row\",\r\n    padding: 15,\r\n    marginVertical: 10,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    borderWidth: 1,\r\n    borderColor: Colors.secondary,\r\n  },\r\n});"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,MAAP;AACA,SAASC,MAAT,QAAuB,oBAAvB;;;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAA2C;EAAA,IAAzCC,IAAyC,QAAzCA,IAAyC;EAAA,IAAnCC,gBAAmC,QAAnCA,gBAAmC;EAAA,IAAjBC,IAAiB,QAAjBA,IAAiB;EAAA,IAAXC,KAAW,QAAXA,KAAW;EACnE,OACE,KAAC,IAAD;IAAM,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB;MAACF,KAAK,EAALA;IAAD,CAAnB,CAAb;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAE;QAAEG,aAAa,EAAE,QAAjB;QAA2BH,KAAK,EAAE;MAAlC,CAAb;MAAA,WACE,KAAC,IAAD;QACE,KAAK,EAAE;UACLI,QAAQ,EAAE,EADL;UAELC,YAAY,EAAE;QAFT,CADT;QAAA,UAMGN;MANH,EADF,EASE,KAAC,cAAD;QACE,WAAW,EAAE;UACXO,eAAe,EAAEZ,MAAM,CAACa,SADb;UAEXC,YAAY,EAAE,EAFH;UAGXC,cAAc,EAAE,QAHL;UAIXC,UAAU,EAAE,QAJD;UAKXC,YAAY,EAAE,QALH;UAMXX,KAAK,EAAE;QANI,CADf;QASE,eAAe,EAAE;UAAEY,KAAK,EAAElB,MAAM,CAACmB;QAAhB,CATnB;QAUE,iBAAiB,EAAE,iBAVrB;QAWE,kBAAkB,EAAE;UAAA,OAClB,KAAC,MAAD;YAAQ,IAAI,EAAC,cAAb;YAA4B,IAAI,EAAE,EAAlC;YAAsC,KAAK,EAAEnB,MAAM,CAACmB;UAApD,EADkB;QAAA,CAXtB;QAcE,oBAAoB,EAAEnB,MAAM,CAACoB,SAd/B;QAeE,aAAa,EAAE;UACbd,KAAK,EAAE,KADM;UAEbe,MAAM,EAAE,KAFK;UAGbC,MAAM,EAAE,EAHK;UAIbC,WAAW,EAAE,CAJA;UAKbC,WAAW,EAAExB,MAAM,CAACyB,UALP;UAMbX,YAAY,EAAE,EAND;UAObY,OAAO,EAAE,EAPI;UAQbT,YAAY,EAAE,QARD;UASbF,cAAc,EAAE,QATH;UAUbY,SAAS,EAAE;QAVE,CAfjB;QA2BE,IAAI,EAAExB,IA3BR;QA4BE,QAAQ,EAAE,kBAACyB,YAAD,EAAeC,KAAf,EAAyB;UACjCzB,gBAAgB,CAACwB,YAAD,CAAhB;QACD,CA9BH;QA+BE,wBAAwB,EAAE,kCAACA,YAAD,EAAeC,KAAf,EAAyB;UAGjD,OAAOD,YAAP;QACD,CAnCH;QAoCE,mBAAmB,EAAE,6BAACE,IAAD,EAAOD,KAAP,EAAiB;UAGpC,OAAOC,IAAP;QACD;MAxCH,EATF;IAAA;EADF,EADF;AAwDK,CAzDP;;AA2DM,eAAe5B,iBAAf;AAEN,IAAMK,MAAM,GAAGwB,UAAU,CAACC,MAAX,CAAkB;EAC/BxB,SAAS,EAAE;IACTI,eAAe,EAAEZ,MAAM,CAACiC,KADf;IAETnB,YAAY,EAAE,EAFL;IAGTL,aAAa,EAAE,KAHN;IAITiB,OAAO,EAAE,EAJA;IAKTQ,cAAc,EAAE,EALP;IAMTC,OAAO,EAAE,MANA;IAOT1B,aAAa,EAAE,KAPN;IAQTO,UAAU,EAAE,QARH;IASTO,WAAW,EAAE,CATJ;IAUTC,WAAW,EAAExB,MAAM,CAACa;EAVX;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}