{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"leftIcon\", \"width\", \"rightIcon\", \"handlePasswordVisibility\", \"Name\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Colors from \"../../utils/Colors\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function AppTextInput(_ref) {\n  var leftIcon = _ref.leftIcon,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100%\" : _ref$width,\n      rightIcon = _ref.rightIcon,\n      handlePasswordVisibility = _ref.handlePasswordVisibility,\n      Name = _ref.Name,\n      otherProps = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(View, {\n    style: [styles.container, {\n      width: width\n    }],\n    children: _jsxs(View, {\n      style: {\n        flexDirection: \"column\",\n        width: \"100%\"\n      },\n      children: [_jsxs(Text, {\n        style: {\n          fontSize: 16,\n          marginBottom: 15\n        },\n        children: [Name, \":\"]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        children: [leftIcon && _jsx(MaterialCommunityIcons, {\n          name: leftIcon,\n          size: 20,\n          color: Colors.mediumGrey,\n          style: styles.icon\n        }), _jsx(TextInput, _objectSpread({\n          style: styles.input,\n          placeholderTextColor: Colors.mediumGrey\n        }, otherProps)), rightIcon && _jsx(TouchableOpacity, {\n          onPress: handlePasswordVisibility,\n          children: _jsx(MaterialCommunityIcons, {\n            name: rightIcon,\n            size: 20,\n            color: Colors.mediumGrey,\n            style: styles.rightIconStyles\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.white,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    padding: 15,\n    marginVertical: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: Colors.secondary\n  },\n  icon: {\n    marginRight: 10,\n    fontSize: 18\n  },\n  input: {\n    width: \"80%\",\n    fontSize: 15,\n    color: Colors.mediumGrey\n  },\n  rightIconStyles: {\n    position: \"absolute\",\n    right: 30,\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"names":["MaterialCommunityIcons","React","Colors","AppTextInput","leftIcon","width","rightIcon","handlePasswordVisibility","Name","otherProps","styles","container","flexDirection","fontSize","marginBottom","alignItems","mediumGrey","icon","input","rightIconStyles","StyleSheet","create","backgroundColor","white","borderRadius","padding","marginVertical","display","borderWidth","borderColor","secondary","marginRight","color","position","right","alignSelf"],"sources":["C:/Users/syeda/desktop/Github/Projects/Worketzy/Src/Components/CustomComponents/appTextInput.jsx"],"sourcesContent":["import { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport React from \"react\";\r\nimport { StyleSheet, TextInput, TouchableOpacity, View, Text } from \"react-native\";\r\nimport Colors from \"../../utils/Colors\";\r\n\r\nexport default function AppTextInput({\r\n  leftIcon,\r\n  width = \"100%\",\r\n  rightIcon,\r\n  handlePasswordVisibility,\r\n  Name,\r\n  ...otherProps\r\n}) {\r\n  return (\r\n    <View style={[styles.container, { width }]}>\r\n      <View style={{flexDirection:\"column\", width:\"100%\" }} >\r\n        <Text style={{fontSize:16, marginBottom:15 }} >{Name}:</Text>\r\n        <View style={{ flexDirection: \"row\", alignItems:\"center\"}} >\r\n        {leftIcon && (\r\n          <MaterialCommunityIcons\r\n          name={leftIcon}\r\n          size={20}\r\n        color={Colors.mediumGrey}\r\n        style={styles.icon}\r\n        />\r\n        )}\r\n        <TextInput\r\n        style={styles.input}\r\n        placeholderTextColor={Colors.mediumGrey}\r\n        {...otherProps}\r\n        />\r\n        {rightIcon && (\r\n          <TouchableOpacity onPress={handlePasswordVisibility}>\r\n          <MaterialCommunityIcons\r\n          name={rightIcon}\r\n          size={20}\r\n          color={Colors.mediumGrey}\r\n          style={styles.rightIconStyles}\r\n          />\r\n          </TouchableOpacity>\r\n          )}\r\n          </View>\r\n        </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: Colors.white,\r\n    borderRadius: 10,\r\n    flexDirection: \"row\",\r\n    padding: 15,\r\n    marginVertical: 10,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    borderWidth:1,\r\n    borderColor:Colors.secondary,\r\n  },\r\n  icon: {\r\n    marginRight: 10,\r\n    fontSize: 18,\r\n  },\r\n  input: {\r\n    width: \"80%\",\r\n    fontSize: 15,\r\n    color: Colors.mediumGrey,\r\n  },\r\n  rightIconStyles: {\r\n    position: \"absolute\",\r\n    right: 30,\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n"],"mappings":";;;;;;;;AAAA,SAASA,sBAAT,QAAuC,oBAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,MAAP;;;AAEA,eAAe,SAASC,YAAT,OAOZ;EAAA,IANDC,QAMC,QANDA,QAMC;EAAA,sBALDC,KAKC;EAAA,IALDA,KAKC,2BALO,MAKP;EAAA,IAJDC,SAIC,QAJDA,SAIC;EAAA,IAHDC,wBAGC,QAHDA,wBAGC;EAAA,IAFDC,IAEC,QAFDA,IAEC;EAAA,IADEC,UACF;;EACD,OACE,KAAC,IAAD;IAAM,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB;MAAEN,KAAK,EAALA;IAAF,CAAnB,CAAb;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAE;QAACO,aAAa,EAAC,QAAf;QAAyBP,KAAK,EAAC;MAA/B,CAAb;MAAA,WACE,MAAC,IAAD;QAAM,KAAK,EAAE;UAACQ,QAAQ,EAAC,EAAV;UAAcC,YAAY,EAAC;QAA3B,CAAb;QAAA,WAAgDN,IAAhD;MAAA,EADF,EAEE,MAAC,IAAD;QAAM,KAAK,EAAE;UAAEI,aAAa,EAAE,KAAjB;UAAwBG,UAAU,EAAC;QAAnC,CAAb;QAAA,WACCX,QAAQ,IACP,KAAC,sBAAD;UACA,IAAI,EAAEA,QADN;UAEA,IAAI,EAAE,EAFN;UAGF,KAAK,EAAEF,MAAM,CAACc,UAHZ;UAIF,KAAK,EAAEN,MAAM,CAACO;QAJZ,EAFF,EASA,KAAC,SAAD;UACA,KAAK,EAAEP,MAAM,CAACQ,KADd;UAEA,oBAAoB,EAAEhB,MAAM,CAACc;QAF7B,GAGIP,UAHJ,EATA,EAcCH,SAAS,IACR,KAAC,gBAAD;UAAkB,OAAO,EAAEC,wBAA3B;UAAA,UACA,KAAC,sBAAD;YACA,IAAI,EAAED,SADN;YAEA,IAAI,EAAE,EAFN;YAGA,KAAK,EAAEJ,MAAM,CAACc,UAHd;YAIA,KAAK,EAAEN,MAAM,CAACS;UAJd;QADA,EAfF;MAAA,EAFF;IAAA;EADF,EADF;AAgCD;AAED,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;EAC/BV,SAAS,EAAE;IACTW,eAAe,EAAEpB,MAAM,CAACqB,KADf;IAETC,YAAY,EAAE,EAFL;IAGTZ,aAAa,EAAE,KAHN;IAITa,OAAO,EAAE,EAJA;IAKTC,cAAc,EAAE,EALP;IAMTC,OAAO,EAAE,MANA;IAOTf,aAAa,EAAE,KAPN;IAQTG,UAAU,EAAE,QARH;IASTa,WAAW,EAAC,CATH;IAUTC,WAAW,EAAC3B,MAAM,CAAC4B;EAVV,CADoB;EAa/Bb,IAAI,EAAE;IACJc,WAAW,EAAE,EADT;IAEJlB,QAAQ,EAAE;EAFN,CAbyB;EAiB/BK,KAAK,EAAE;IACLb,KAAK,EAAE,KADF;IAELQ,QAAQ,EAAE,EAFL;IAGLmB,KAAK,EAAE9B,MAAM,CAACc;EAHT,CAjBwB;EAsB/BG,eAAe,EAAE;IACfc,QAAQ,EAAE,UADK;IAEfC,KAAK,EAAE,EAFQ;IAGfC,SAAS,EAAE;EAHI;AAtBc,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}