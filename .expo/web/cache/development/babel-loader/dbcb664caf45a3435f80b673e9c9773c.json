{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"width\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport { useFormikContext } from \"formik\";\nimport AppTextInput from \"../CustomComponents/appTextInput\";\nimport FormErrorMessage from \"./formErrorMessage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FormField(_ref) {\n  var name = _ref.name,\n      width = _ref.width,\n      otherProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useFormikContext = useFormikContext(),\n      setFieldTouched = _useFormikContext.setFieldTouched,\n      setFieldValue = _useFormikContext.setFieldValue,\n      values = _useFormikContext.values,\n      errors = _useFormikContext.errors,\n      touched = _useFormikContext.touched;\n\n  return _jsxs(React.Fragment, {\n    children: [_jsx(AppTextInput, _objectSpread({\n      value: values[name],\n      onChangeText: function onChangeText(text) {\n        return setFieldValue(name, text);\n      },\n      onBlur: function onBlur() {\n        return setFieldTouched(name);\n      },\n      width: width\n    }, otherProps)), _jsx(FormErrorMessage, {\n      error: errors[name],\n      visible: touched[name]\n    })]\n  });\n}","map":{"version":3,"names":["React","useFormikContext","AppTextInput","FormErrorMessage","FormField","name","width","otherProps","setFieldTouched","setFieldValue","values","errors","touched","text"],"sources":["C:/Users/syeda/desktop/Github/Projects/Worketzy/Src/Components/forms/formField.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useFormikContext } from \"formik\";\r\nimport AppTextInput from \"../CustomComponents/appTextInput\";\r\nimport FormErrorMessage from \"./formErrorMessage\";\r\n\r\nexport default function FormField({ name, width, ...otherProps }) {\r\n  const {\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    values,\r\n    errors,\r\n    touched, \r\n  } = useFormikContext();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppTextInput\r\n        value={values[name]}\r\n        onChangeText={(text) => setFieldValue(name, text)}\r\n        onBlur={() => setFieldTouched(name)}\r\n        width={width}\r\n        {...otherProps}\r\n      />\r\n      <FormErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,YAAP;AACA,OAAOC,gBAAP;;;AAEA,eAAe,SAASC,SAAT,OAAmD;EAAA,IAA9BC,IAA8B,QAA9BA,IAA8B;EAAA,IAAxBC,KAAwB,QAAxBA,KAAwB;EAAA,IAAdC,UAAc;;EAChE,wBAMIN,gBAAgB,EANpB;EAAA,IACEO,eADF,qBACEA,eADF;EAAA,IAEEC,aAFF,qBAEEA,aAFF;EAAA,IAGEC,MAHF,qBAGEA,MAHF;EAAA,IAIEC,MAJF,qBAIEA,MAJF;EAAA,IAKEC,OALF,qBAKEA,OALF;;EAQA,OACE,MAAC,KAAD,CAAO,QAAP;IAAA,WACE,KAAC,YAAD;MACE,KAAK,EAAEF,MAAM,CAACL,IAAD,CADf;MAEE,YAAY,EAAE,sBAACQ,IAAD;QAAA,OAAUJ,aAAa,CAACJ,IAAD,EAAOQ,IAAP,CAAvB;MAAA,CAFhB;MAGE,MAAM,EAAE;QAAA,OAAML,eAAe,CAACH,IAAD,CAArB;MAAA,CAHV;MAIE,KAAK,EAAEC;IAJT,GAKMC,UALN,EADF,EAQE,KAAC,gBAAD;MAAkB,KAAK,EAAEI,MAAM,CAACN,IAAD,CAA/B;MAAuC,OAAO,EAAEO,OAAO,CAACP,IAAD;IAAvD,EARF;EAAA,EADF;AAYD"},"metadata":{},"sourceType":"module"}