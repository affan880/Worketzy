{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport firebaseConfig from \"./firebaseConfig\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nvar _setTimeout = global.setTimeout;\nvar _clearTimeout = global.clearTimeout;\nvar MAX_TIMER_DURATION_MS = 60 * 1000;\n\nif (Platform.OS === \"android\") {\n  var timerFix = {};\n\n  var runTask = function runTask(id, fn, ttl, args) {\n    var waitingTime = ttl - Date.now();\n\n    if (waitingTime <= 1) {\n      InteractionManager.runAfterInteractions(function () {\n        if (!timerFix[id]) {\n          return;\n        }\n\n        delete timerFix[id];\n        fn.apply(void 0, _toConsumableArray(args));\n      });\n      return;\n    }\n\n    var afterTime = Math.min(waitingTime, MAX_TIMER_DURATION_MS);\n    timerFix[id] = _setTimeout(function () {\n      return runTask(id, fn, ttl, args);\n    }, afterTime);\n  };\n\n  global.setTimeout = function (fn, time) {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    if (MAX_TIMER_DURATION_MS < time) {\n      var ttl = Date.now() + time;\n      var id = \"_lt_\" + Object.keys(timerFix).length;\n      runTask(id, fn, ttl, args);\n      return id;\n    }\n\n    return _setTimeout.apply(void 0, [fn, time].concat(args));\n  };\n\n  global.clearTimeout = function (id) {\n    if (typeof id === \"string\" && id.startsWith(\"_lt_\")) {\n      _clearTimeout(timerFix[id]);\n\n      delete timerFix[id];\n      return;\n    }\n\n    _clearTimeout(id);\n  };\n}\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport var auth = firebase.auth();\nexport var user = firebase.auth().currentUser;\nexport var logout = function logout() {\n  return auth.signOut();\n};\nexport var firebaseLogin = function _callee(_ref) {\n  var verificationId, verificationCode, credential;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          verificationId = _ref.verificationId, verificationCode = _ref.verificationCode;\n          credential = firebase.auth.PhoneAuthProvider.credential(verificationId, verificationCode);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(firebase.auth().signInWithCredential(credential));\n\n        case 4:\n          return _context.abrupt(\"return\", true);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getVerificationId = function _callee2(_ref2) {\n  var phoneNumber, recaptchaVerifierCurrent, phoneProvider, verificationId;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          phoneNumber = _ref2.phoneNumber, recaptchaVerifierCurrent = _ref2.recaptchaVerifierCurrent;\n          phoneProvider = new firebase.auth.PhoneAuthProvider();\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(phoneProvider.verifyPhoneNumber(phoneNumber, recaptchaVerifierCurrent));\n\n        case 4:\n          verificationId = _context2.sent;\n          return _context2.abrupt(\"return\", verificationId);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var Firestore = firebase.firestore();\nexport var createUserDocument = function _callee3(ValidFirstName, ValidLastName, ValidEmail, Bio, student, UniversityName, checked) {\n  var user, uid, userdetails, userRef, snapshot;\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          user = firebase.auth().currentUser;\n          uid = user.uid;\n\n          if (user) {\n            _context3.next = 4;\n            break;\n          }\n\n          return _context3.abrupt(\"return\");\n\n        case 4:\n          userdetails = {\n            firstName: ValidFirstName,\n            lastName: ValidLastName,\n            Email: ValidEmail,\n            Bio: Bio,\n            Student: student,\n            UniversityName: UniversityName,\n            EmployeeStatus: checked,\n            createdAt: new Date()\n          };\n          userRef = Firestore.collection(\"users\").doc(uid);\n          _context3.next = 8;\n          return _regeneratorRuntime.awrap(userRef.get());\n\n        case 8:\n          snapshot = _context3.sent;\n\n          if (!snapshot.exists) {\n            userRef.set(userdetails).then(function () {\n              console.log(\"Value successfully written!\");\n            }).catch(function (error) {\n              console.error(\"Error writing Value: \", error);\n            });\n          }\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var uploadImage = function _callee4(image, name, setImageUpload, setLoading) {\n  var user, uid, blob, ref, snapshot;\n  return _regeneratorRuntime.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          user = firebase.auth().currentUser;\n          uid = user.uid;\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n            var httpReq = new XMLHttpRequest();\n\n            httpReq.onload = function () {\n              resolve(httpReq.response);\n            };\n\n            httpReq.onerror = function () {\n              reject(new TypeError(\"Network request failed\"));\n            };\n\n            httpReq.responseType = \"blob\";\n            httpReq.open(\"GET\", image, true);\n            httpReq.send(null);\n          }));\n\n        case 4:\n          blob = _context4.sent;\n          ref = firebase.storage().ref(\"userDetails/profilePic/\" + uid);\n          snapshot = ref.put(blob);\n          snapshot.on(firebase.storage.TaskEvent.STATE_CHANGED, function () {\n            setLoading(true);\n          }, function (error) {\n            console.log(error);\n          }, function () {\n            snapshot.snapshot.ref.getDownloadURL().then(function (url) {\n              setImageUpload(true);\n              blob.close();\n              return url;\n            });\n          });\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"names":["firebase","firebaseConfig","_setTimeout","global","setTimeout","_clearTimeout","clearTimeout","MAX_TIMER_DURATION_MS","Platform","OS","timerFix","runTask","id","fn","ttl","args","waitingTime","Date","now","InteractionManager","runAfterInteractions","afterTime","Math","min","time","Object","keys","length","startsWith","apps","initializeApp","auth","user","currentUser","logout","signOut","firebaseLogin","verificationId","verificationCode","credential","PhoneAuthProvider","signInWithCredential","getVerificationId","phoneNumber","recaptchaVerifierCurrent","phoneProvider","verifyPhoneNumber","Firestore","firestore","createUserDocument","ValidFirstName","ValidLastName","ValidEmail","Bio","student","UniversityName","checked","uid","userdetails","firstName","lastName","Email","Student","EmployeeStatus","createdAt","userRef","collection","doc","get","snapshot","exists","set","then","console","log","catch","error","uploadImage","image","name","setImageUpload","setLoading","Promise","resolve","reject","httpReq","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","blob","ref","storage","put","on","TaskEvent","STATE_CHANGED","getDownloadURL","url","close"],"sources":["C:/Users/syeda/desktop/Github/Projects/Worketzy/Src/Components/firebase/firebase.jsx"],"sourcesContent":["import * as firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from \"./firebaseConfig\";\r\nimport { Platform, InteractionManager } from \"react-native\";\r\n\r\nconst _setTimeout = global.setTimeout;\r\nconst _clearTimeout = global.clearTimeout;\r\nconst MAX_TIMER_DURATION_MS = 60 * 1000;\r\nif (Platform.OS === \"android\") {\r\n  // Work around issue `Setting a timer for long time`\r\n  // see: https://github.com/firebase/firebase-js-sdk/issues/97\r\n  const timerFix = {};\r\n  const runTask = (id, fn, ttl, args) => {\r\n    const waitingTime = ttl - Date.now();\r\n    if (waitingTime <= 1) {\r\n      InteractionManager.runAfterInteractions(() => {\r\n        if (!timerFix[id]) {\r\n          return;\r\n        }\r\n        delete timerFix[id];\r\n        fn(...args);\r\n      });\r\n      return;\r\n    }\r\n\r\n    const afterTime = Math.min(waitingTime, MAX_TIMER_DURATION_MS);\r\n    timerFix[id] = _setTimeout(() => runTask(id, fn, ttl, args), afterTime);\r\n  };\r\n\r\n  global.setTimeout = (fn, time, ...args) => {\r\n    if (MAX_TIMER_DURATION_MS < time) {\r\n      const ttl = Date.now() + time;\r\n      const id = \"_lt_\" + Object.keys(timerFix).length;\r\n      runTask(id, fn, ttl, args);\r\n      return id;\r\n    }\r\n    return _setTimeout(fn, time, ...args);\r\n  };\r\n\r\n  global.clearTimeout = (id) => {\r\n    if (typeof id === \"string\" && id.startsWith(\"_lt_\")) {\r\n      _clearTimeout(timerFix[id]);\r\n      delete timerFix[id];\r\n      return;\r\n    }\r\n    _clearTimeout(id);\r\n  };\r\n}\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const user = firebase.auth().currentUser;\r\nexport const logout = () => auth.signOut();\r\n\r\nexport const firebaseLogin = async ({ verificationId, verificationCode }) => {\r\n  const credential = firebase.auth.PhoneAuthProvider.credential(\r\n    verificationId,\r\n    verificationCode\r\n  );\r\n  await firebase.auth().signInWithCredential(credential);\r\n\r\n\r\n  return true;\r\n};\r\n\r\nexport const getVerificationId = async ({\r\n  phoneNumber,\r\n  recaptchaVerifierCurrent,\r\n}) => {\r\n  const phoneProvider = new firebase.auth.PhoneAuthProvider();\r\n  const verificationId = await phoneProvider.verifyPhoneNumber(\r\n    phoneNumber,\r\n    recaptchaVerifierCurrent\r\n  );\r\n\r\n  return verificationId;\r\n};\r\n\r\nexport const Firestore = firebase.firestore();\r\n\r\nexport const createUserDocument = async (\r\n  ValidFirstName,\r\n  ValidLastName,\r\n  ValidEmail,\r\n  Bio,\r\n  student,\r\n  UniversityName,\r\n  checked\r\n) => {\r\n  const user = firebase.auth().currentUser;\r\n  const uid = user.uid;\r\n  if (!user) return;\r\n  const userdetails = {\r\n    firstName: ValidFirstName,\r\n    lastName: ValidLastName,\r\n    Email: ValidEmail,\r\n    Bio: Bio,\r\n    Student: student,\r\n    UniversityName: UniversityName,\r\n    EmployeeStatus: checked,\r\n    createdAt: new Date(),\r\n  };\r\n  const userRef = Firestore.collection(\"users\").doc(uid);\r\n  const snapshot = await userRef.get();\r\n  if (!snapshot.exists) {\r\n    userRef\r\n      .set(userdetails)\r\n      .then(function () {\r\n        console.log(\"Value successfully written!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error writing Value: \", error);\r\n      });\r\n  }\r\n};\r\n\r\nexport const uploadImage = async (image, name, setImageUpload, setLoading) => {\r\n  const user = firebase.auth().currentUser;\r\n  const uid = user.uid;\r\n  const blob = await new Promise((resolve, reject) => {\r\n    const httpReq = new XMLHttpRequest();\r\n    httpReq.onload = function () {\r\n      resolve(httpReq.response);\r\n    };\r\n    httpReq.onerror = function () {\r\n      reject(new TypeError(\"Network request failed\"));\r\n    };\r\n    httpReq.responseType = \"blob\";\r\n    httpReq.open(\"GET\", image, true);\r\n    httpReq.send(null);\r\n  });\r\n\r\n  const ref = firebase.storage().ref(\"userDetails/profilePic/\" + uid);\r\n  const snapshot = ref.put(blob);\r\n\r\n  snapshot.on(\r\n    firebase.storage.TaskEvent.STATE_CHANGED,\r\n    () => {\r\n      setLoading(true)\r\n    },\r\n    (error) => {\r\n      console.log(error);\r\n    },\r\n    () => {\r\n      snapshot.snapshot.ref.getDownloadURL().then((url) => {\r\n        setImageUpload(true);\r\n        // console.log(\"download uri : \", url);\r\n        blob.close();\r\n        return url;\r\n      });\r\n    }\r\n  );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}